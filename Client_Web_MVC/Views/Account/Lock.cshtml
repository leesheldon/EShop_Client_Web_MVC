@model Client_Web_MVC.Models.UserForCRUD

@{
    ViewBag.Title = "Lock User";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Lock User</h2>
<hr />

@using (Html.BeginForm("Lock", "Account", FormMethod.Post, new { onsubmit = "return onValidation()" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RolesNames, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RolesNames, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LockoutReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LockoutReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LockoutReason, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.LockoutEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @*<input asp-for="@Model.LockoutEnd" id="lockoutEnd" type="text" asp-format="{0:MM/dd/yyyy}" class="form-control" />*@

                <input id="lockoutEnd_FromPicker" type="text" class="form-control" readonly onchange="PassValueToLockoutEnd()" />
                @Html.EditorFor(model => model.StringLockoutEnd, new { htmlAttributes = new { @class = "form-control", id = "lockoutEnd", @type = "hidden" } })
            </div>
            <div class="col-md-2">
            </div>
        </div>
        
        <br />
        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                <input type="submit" value="Lock" class="btn btn-danger" />&nbsp;&nbsp;<text>|</text>&nbsp;&nbsp;
                @Html.ActionLink("Back to list", "Index", null, new { @style = "font-size: x-large;" })
            </div>
            <div class="col-md-2">
            </div>
        </div>
    </div>
                    }


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                // Lockout End
                var txt = $("#lockoutEnd").val();
                $("#lockoutEnd_FromPicker").val(txt);

                // Date time picker
                $("#lockoutEnd_FromPicker").datetimepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    changeYear: true,
                    controlType: 'select',
                    //yearRange: "-100:+0", // You can set the year range as per as your need
                    dateFormat: "dd/mm/yy",
                    timeFormat: "hh:mm:ss TT"
                });
            });

        });


    </script>

    <script type="text/javascript">
        
        function PassValueToLockoutEnd() {
            var txt = $("#lockoutEnd_FromPicker").val();

            $("#lockoutEnd").val(txt);
        }

        // Form validation before submit
        function onValidation() {
            var txt = $("#lockoutEnd_FromPicker").val();

            $("#lockoutEnd").val(txt);            
        }
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
